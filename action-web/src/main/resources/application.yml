server:
  port: 9999

spring:
  datasource:
    hikari:
      jdbc-url: jdbc:mysql://127.0.0.1:3306/action?useSSL=false&useUnicode=true&autoReconnect=true&allowMultiQueries=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai&rewriteBatchedStatements=true&zeroDateTimeBehavior=convertToNull
      username: root
      password: root
  redis:
    cluster:
      nodes: 192.168.1.11:6379,192.168.1.11:6380,192.168.1.13:6379,192.168.1.13:6380,192.168.1.14:6379,192.168.1.14:6380
    database: 0
    # host: 192.168.1.14
    #port: 6379
    #password:
    lecttuce:
      pool:
        max-active: 8
        max-wait: -1ms
        max-idle: 8
        min-idle: 0
      shutdown-timeout: 200ms

  application:
    name: action

# MyBatis Plus 配置
mybatis-plus:
  configuration:
    # 配置sql输出
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    cache-enabled: true
nacos:
  config:
    server-addr: 192.168.1.11:8848


#rocketmq配置
rocketmq:
  name-server: 192.168.1.11:9876;192.168.1.12:9876;192.168.1.13:9876
  producer:
    group: my-group1
    sendMessageTimeout: 300000
demo:
  rocketmq:
    topic: string-topic
    orderTopic: order-paid-topic
    msgExtTopic: message-ext-topic
    transTopic: spring-transaction-topic
    topic.user: user-topic
    bytesRequestTopic: bytesRequestTopic:tagA
    stringRequestTopic: stringRequestTopic:tagA
    stringRequestTopic1: stringRequestTopic
    objectRequestTopic: objectRequestTopic:tagA
    genericRequestTopic: genericRequestTopic:tagA
    extNameServer: 192.168.1.11:9876;192.168.1.12:9876;192.168.1.13:9876
    myNameServer: 192.168.1.11:9876;192.168.1.12:9876;192.168.1.13:9876
    #comsumer
    bytesRequestConsumer: bytesRequestConsumer
    stringRequestConsumer: stringRequestConsumer
    objectRequestConsumer: objectRequestConsumer
    genericRequestConsumer: genericRequestConsumer
    tag: tagA
    consumer:
      bytesRequestTopic: bytesRequestTopic